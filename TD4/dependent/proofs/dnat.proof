define fst = fun (m : Nat) -> fun (n : Nat) -> m
define pred = fun (k : Nat) -> Ind (fun (n : Nat) -> Nat) Z fst k
eval pred Z 
eval pred (S (S (S Z)))


define add = fun (m : Nat) -> fun (n : Nat) -> Ind (fun (n : Nat) -> Nat) n (fun (m : Nat) -> fun (s : Nat) -> S s) m
eval add (S (S (S Z))) (S (S Z))
